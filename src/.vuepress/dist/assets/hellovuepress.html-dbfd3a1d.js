import{_ as i,X as o,Y as r,$ as e,a2 as s,a0 as n,Z as t,C as l}from"./framework-8bd09bfb.js";const p={},d=t(`<h1 id="通过vuepress更新个人博客" tabindex="-1"><a class="header-anchor" href="#通过vuepress更新个人博客" aria-hidden="true">#</a> 通过vuepress更新个人博客</h1><h2 id="博客搭建教程" tabindex="-1"><a class="header-anchor" href="#博客搭建教程" aria-hidden="true">#</a> 博客搭建教程</h2><blockquote><p>本教程使用 pnpm 作为项目管理器，因为 VuePress 和 VuePress Theme Hope 都是通过 pnpm 来管理依赖的。</p></blockquote><h3 id="_1、安装-pnpm" tabindex="-1"><a class="header-anchor" href="#_1、安装-pnpm" aria-hidden="true">#</a> 1、安装 Pnpm</h3><p>在终端中输入下列命令安装 pnpm:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>corepack <span class="token builtin class-name">enable</span>
corepack prepare pnpm@latest <span class="token parameter variable">--activate</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、初始化项目" tabindex="-1"><a class="header-anchor" href="#_2、初始化项目" aria-hidden="true">#</a> 2、初始化项目</h3><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>pnpm create vuepress-theme-hope my-docs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3、常用命令" tabindex="-1"><a class="header-anchor" href="#_3、常用命令" aria-hidden="true">#</a> 3、常用命令</h3><ul><li><code>vuepress dev [dir]</code> 会启动一个开发服务器，以便让你在本地开发你的 VuePress 站点。</li><li><code>vuepress build [dir]</code> 会将你的 VuePress 站点构建成静态文件，以便你进行后续部署。</li></ul><blockquote><p>使用模板</p><p>如果你在使用 VuePress Theme Hope 模板，你可以在 <code>package.json</code> 中发现下列三个命令:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;docs:build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vuepress build src&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;docs:clean-dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vuepress dev src --clean-cache&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;docs:dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vuepress dev src&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这意味着你可以使用:</p><ul><li><code>pnpm docs:dev</code> 启动开发服务器</li><li><code>pnpm docs:build</code> 构建项目并输出</li><li><code>pnpm docs:clean-dev</code> 清除缓存并启动开发服务器</li></ul></blockquote><h3 id="_4、-升级版本" tabindex="-1"><a class="header-anchor" href="#_4、-升级版本" aria-hidden="true">#</a> 4、 升级版本</h3><p>如果你需要升级主题和 VuePress 版本，请执行以下命令:</p><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>pnpm dlx vp-update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="完善基本框架" tabindex="-1"><a class="header-anchor" href="#完善基本框架" aria-hidden="true">#</a> 完善基本框架</h2><h3 id="_1、了解基本结构" tabindex="-1"><a class="header-anchor" href="#_1、了解基本结构" aria-hidden="true">#</a> 1、了解基本结构</h3><h3 id="_2、完善导航栏以及相关配置" tabindex="-1"><a class="header-anchor" href="#_2、完善导航栏以及相关配置" aria-hidden="true">#</a> 2、完善导航栏以及相关配置</h3><p>3、</p><figure><img src="http://images.rl0206.love/202304181527666.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="http://images.rl0206.love/202304192047438.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="http://images.rl0206.love/202304221329083.ico" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,21),c={id:"评论插件-waline",tabindex:"-1"},u=e("a",{class:"header-anchor",href:"#评论插件-waline","aria-hidden":"true"},"#",-1),h={href:"https://plugin-comment2.vuejs.press/zh/guide/waline.html",target:"_blank",rel:"noopener noreferrer"},m=e("h4",{id:"数据库",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#数据库","aria-hidden":"true"},"#"),s(" 数据库")],-1),v={href:"https://console.leancloud.app/apps",target:"_blank",rel:"noopener noreferrer"},g=e("code",null,"APP ID",-1),b=e("code",null,"APP Key",-1),k=e("code",null,"Master Key",-1),_=e("h4",{id:"服务端",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#服务端","aria-hidden":"true"},"#"),s(" 服务端")],-1),f={href:"https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fwalinejs%2Fwaline%2Ftree%2Fmain%2Fexample",target:"_blank",rel:"noopener noreferrer"},q={href:"https://cs-guider-6cmm99f2s-wl2o2o.vercel.app/",target:"_blank",rel:"noopener noreferrer"},x=e("p",null,"此时可以配置自己的域名，以便进行管理，不配置域名就通过以上服务端地址进行管理即可。",-1),P=e("p",null,[e("strong",null,"配置域名之后的管理网址"),s("：")],-1),y={href:"http://example.your-domain.com",target:"_blank",rel:"noopener noreferrer"},V={href:"http://example.your-domain.com/ui",target:"_blank",rel:"noopener noreferrer"},I=t('<h4 id="客户端" tabindex="-1"><a class="header-anchor" href="#客户端" aria-hidden="true">#</a> 客户端</h4><h4 id="使用插件" tabindex="-1"><a class="header-anchor" href="#使用插件" aria-hidden="true">#</a> 使用插件</h4><p>在插件选项中设置 <code>provider: &quot;Waline&quot;</code>，同时设置服务端地址 <code>serverURL</code> 为上一步获取到的值。</p><p>此时，将 <code>&lt;CommentService&gt;</code> 组件放置在你网站中合适的位置 (通常是页面的底部)，即可使用 Waline 评论功能。</p><p>提示</p><p>你也可以传入其他 Waline 支持的选项 (除了 <code>el</code>)。</p>',6),G={href:"https://plugin-comment2.vuejs.press/zh/config/waline.html",target:"_blank",rel:"noopener noreferrer"},W=e("h4",{id:"评论管理-管理端",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#评论管理-管理端","aria-hidden":"true"},"#"),s(" 评论管理 (管理端)")],-1),j=e("ol",null,[e("li",null,[s("部署完成后，请访问 "),e("code",null,"<serverURL>/ui/register"),s(" 进行注册。首个注册的人会被设定成管理员。")]),e("li",null,"管理员登陆后，即可看到评论管理界面。在这里可以修改、标记或删除评论。"),e("li",null,"用户也可通过评论框注册账号，登陆后会跳转到自己的档案页。")],-1),w={id:"评论插件-giscus",tabindex:"-1"},S=e("a",{class:"header-anchor",href:"#评论插件-giscus","aria-hidden":"true"},"#",-1),H={href:"https://giscus.app/zh-CN",target:"_blank",rel:"noopener noreferrer"},A=e("h4",{id:"选择仓库",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#选择仓库","aria-hidden":"true"},"#"),s(" 选择仓库")],-1),D=e("p",null,"选择 giscus 连接到的仓库。请确保：",-1),N={href:"https://docs.github.com/en/github/administering-a-repository/managing-repository-settings/setting-repository-visibility#making-a-repository-public",target:"_blank",rel:"noopener noreferrer"},T={href:"https://github.com/apps/giscus",target:"_blank",rel:"noopener noreferrer"},L=e("strong",null,"Discussions",-1),U={href:"https://docs.github.com/en/github/administering-a-repository/managing-repository-settings/enabling-or-disabling-github-discussions-for-a-repository",target:"_blank",rel:"noopener noreferrer"},z=t(`<p>仓库：（输入用户名/仓库名）</p><p><em>一个<strong>公开的（public）</strong> GitHub 仓库。Discussion 将被连接到此仓库。</em></p><h4 id="选择页面与嵌入的-discussion-之间的映射关系。" tabindex="-1"><a class="header-anchor" href="#选择页面与嵌入的-discussion-之间的映射关系。" aria-hidden="true">#</a> 选择页面与嵌入的 discussion 之间的映射关系。</h4><p>建议选择：<strong>Discussion 的标题包含页面的 <code>pathname</code></strong></p><h4 id="discussion-分类" tabindex="-1"><a class="header-anchor" href="#discussion-分类" aria-hidden="true">#</a> Discussion 分类</h4><p>选择新 discussions 所在的分类。 推荐使用**公告（announcements）**类型的分类，以确保新 discussion 只能由仓库维护者和 giscus 创建。</p><h4 id="启用-giscus" tabindex="-1"><a class="header-anchor" href="#启用-giscus" aria-hidden="true">#</a> 启用 giscus</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;https://giscus.app/client.js&quot;</span>
        data<span class="token operator">-</span>repo<span class="token operator">=</span><span class="token string">&quot;[在此输入仓库]&quot;</span>
        data<span class="token operator">-</span>repo<span class="token operator">-</span>id<span class="token operator">=</span><span class="token string">&quot;[在此输入仓库 ID]&quot;</span>
        data<span class="token operator">-</span>category<span class="token operator">=</span><span class="token string">&quot;[在此输入分类名]&quot;</span>
        data<span class="token operator">-</span>category<span class="token operator">-</span>id<span class="token operator">=</span><span class="token string">&quot;[在此输入分类 ID]&quot;</span>
        data<span class="token operator">-</span>mapping<span class="token operator">=</span><span class="token string">&quot;pathname&quot;</span>
        data<span class="token operator">-</span>strict<span class="token operator">=</span><span class="token string">&quot;0&quot;</span>
        data<span class="token operator">-</span>reactions<span class="token operator">-</span>enabled<span class="token operator">=</span><span class="token string">&quot;1&quot;</span>
        data<span class="token operator">-</span>emit<span class="token operator">-</span>metadata<span class="token operator">=</span><span class="token string">&quot;0&quot;</span>
        data<span class="token operator">-</span>input<span class="token operator">-</span>position<span class="token operator">=</span><span class="token string">&quot;bottom&quot;</span>
        data<span class="token operator">-</span>theme<span class="token operator">=</span><span class="token string">&quot;preferred_color_scheme&quot;</span>
        data<span class="token operator">-</span>lang<span class="token operator">=</span><span class="token string">&quot;zh-CN&quot;</span>
        crossorigin<span class="token operator">=</span><span class="token string">&quot;anonymous&quot;</span>
        async<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完成以上几项之后，上面代码段中会出现对应的repo、repoId、category、categoryId，复制下来，稍后有用。</p><p>在theme.ts中添加如下配置：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>plugins：{
	comment: {
   		provider: &quot;Giscus&quot;,
   		repo: &quot;WL2O2O/CS_GUIDER_Giscus&quot;,
  		repoId: &quot;your id&quot;,
   		category: &quot;Announcements&quot;,
   		categoryId: &quot;yours id&quot;
 	 },
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="解决自动部署git-pages" tabindex="-1"><a class="header-anchor" href="#解决自动部署git-pages" aria-hidden="true">#</a> 解决自动部署git pages：</h3><p>新创建一个autopush.bat文件，将以下代码复制到文件中：</p><div class="language-bat line-numbers-mode" data-ext="bat"><pre class="language-bat"><code>@echo off
git add .
git commit -m &quot;update article&quot;
git pull origin master
git push origin master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时推送到gitee是正常的，但是推送之后，git pages的页面不会自动更新，于是经过百度，了解到可以通过Git的Webhooks功能，来实现git pages的自动更新。</p><p>了解一下webHook：</p>`,16),M={href:"https://gitee.com/help/categories/40",target:"_blank",rel:"noopener noreferrer"},B={href:"https://gitee.com/help/articles/4135",target:"_blank",rel:"noopener noreferrer"},C={href:"https://gitee.com/help/articles/4296",target:"_blank",rel:"noopener noreferrer"},E={href:"https://gitee.com/help/articles/4297",target:"_blank",rel:"noopener noreferrer"},R=t(`<p>以下是在Windows系统中使用Git的Webhooks功能自动更新Gitee Pages的步骤：</p><ol><li>在Gitee仓库的设置页面中，找到Webhooks设置，并添加一个新的Webhook，将Payload URL设置为你的博客页面的URL。</li><li>在你的Vuepress博客项目中添加一个post-commit钩子脚本，用于向Gitee仓库发送Webhooks请求，触发Gitee Pages更新。在项目的.git/hooks目录中创建一个post-commit.bat文件，内容如下：</li></ol><div class="language-bat line-numbers-mode" data-ext="bat"><pre class="language-bat"><code>@echo off
curl -X POST https://gitee.com/api/v5/repos/{WLei224}/{WLei224}/hooks/{0c8adb9d-f0cf-450b-8d75-3cc56ac7bf3c}/trigger\\?access_token\\={583af4fe8a6611d418da106c6c8bae88}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>将上述命令中的{用户名}、{仓库名}、{Webhook ID}和{访问令牌}替换为你自己的信息。其中，Webhook ID可以在Gitee仓库的Webhooks设置页面中找到，访问令牌可以在Gitee账号的个人设置页面中生成。</p><ol><li>为post-commit.bat文件添加可执行权限。在终端中进入项目的.git/hooks目录，执行以下命令：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> +x post-commit.bat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>推送代码到Gitee仓库，当你执行git commit命令后，post-commit.bat脚本会自动发送Webhooks请求，触发Gitee Pages更新。</li></ol><p>通过上述步骤，你可以在Windows系统中实现自动更新Gitee Pages，提高博客发布的效率和便捷性。</p><h3 id="博客引入思维导图" tabindex="-1"><a class="header-anchor" href="#博客引入思维导图" aria-hidden="true">#</a> 博客引入思维导图</h3><h3 id="markmap" tabindex="-1"><a class="header-anchor" href="#markmap" aria-hidden="true">#</a> Markmap</h3><p>Markmap 是一个将 Markdown 转换为思维导图的工具。它相对于主题内置的 flowchart 支持更多的格式与内容。</p>`,11),F={href:"https://markmap.js.org/",target:"_blank",rel:"noopener noreferrer"},O=e("li",null,[s("将 HTML 文件放在 "),e("code",null,".vuepress/public/"),s(" 下")],-1),Y=e("li",null,[s("通过 "),e("code",null,"<iframe>"),s(" 插入到 Markdown")],-1),J=t(`<p>输入:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span>
  <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$withBase(&#39;/markmap/demo-zh.html&#39;)<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100%<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>400<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">scrolling</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>No<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">leftmargin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">topmargin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出:</p>`,3),K=e("iframe",{src:"/markmap/demo-zh.html",width:"100%",height:"400",frameborder:"0",scrolling:"No",leftmargin:"0",topmargin:"0"},null,-1),X=t(`<hr><h3 id="尝试缩短博客构建时间的方法-以下是gpt生成的步骤-待测试" tabindex="-1"><a class="header-anchor" href="#尝试缩短博客构建时间的方法-以下是gpt生成的步骤-待测试" aria-hidden="true">#</a> 尝试缩短博客构建时间的方法（以下是GPT生成的步骤，待测试！）</h3><p>VuePress 使用的是 Webpack 构建工具，而使用 pnpm 作为包管理器则可以大幅缩短安装依赖包的时间。然而，如果在使用 pnpm 构建 VuePress 网站时仍然遇到了速度很慢的问题，可以尝试以下几个方法：</p><ol><li><p>更新 pnpm 版本：首先，您可以尝试升级 pnpm 的版本。较新的版本通常会修复一些问题并提高性能。您可以使用以下命令来更新 pnpm：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm i -g pnpm@latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>切换镜像源：如果您使用的是国外的包管理器镜像源，可能会导致下载速度很慢。您可以尝试切换到国内的镜像源，例如淘宝镜像、cnpmjs 等。您可以使用以下命令来设置淘宝镜像源：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pnpm config set registry https://registry.npm.taobao.org
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>使用缓存：在第一次构建 VuePress 网站时，pnpm 会下载所有依赖包，并且可能会需要很长时间。一种解决方法是使用缓存，在下一次构建时从缓存中加载依赖包而不是重新下载。您可以使用以下命令来启用缓存：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pnpm install --shamefully-hoist --store-dir=./.pnpm-store

在第一次构建时，pnpm 会将依赖包缓存到指定的目录中。在下一次构建时，pnpm 将从缓存中加载依赖包，而不是重新下载。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>升级 Node.js 版本：VuePress 需要使用较新的版本的 Node.js，如果您的 Node.js 版本太旧，可能会导致构建速度变慢。您可以尝试将 Node.js 版本升级到最新版，并重新构建 VuePress 网站。</p></li><li><p>按需加载：如果您的 VuePress 网站包含大量的页面和组件，可以尝试使用按需加载来提高构建速度。您可以使用 VuePress 的 <code>async</code> 组件来实现按需加载，例如：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;AsyncContent path=&quot;./path/to/file.vue&quot; /&gt;
\`\`\`

这将使 VuePress 仅在需要时才加载组件，而不是在构建时将所有组件都打包进最终的 JavaScript 文件中。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>以上是一些可以尝试的方法来提高使用 pnpm 构建 VuePress 网站的速度。如果以上方法仍然无法解决您的问题，您可以尝试在 VuePress 官方的 GitHub 仓库中搜索类似的问题，或者在 VuePress 社区中询问其他人是否遇到了类似的问题并得到了解决方法。</p><h3 id="要在-vuepress-中集成百度统计-您需要遵循以下步骤" tabindex="-1"><a class="header-anchor" href="#要在-vuepress-中集成百度统计-您需要遵循以下步骤" aria-hidden="true">#</a> 要在 VuePress 中集成百度统计，您需要遵循以下步骤：</h3><p>在百度统计中创建站点并获取统计代码：首先，您需要在百度统计中创建一个站点，并获取相应的统计代码。在百度统计管理面板中，选择您要添加统计代码的站点，然后单击“代码管理”按钮。在“统计代码”页面中，您将看到一段 JavaScript 代码。复制该代码以备后用。</p><p>在 VuePress 中创建配置文件：接下来，您需要在 VuePress 项目中创建一个配置文件。在您的 VuePress 项目根目录下，创建一个名为 .vuepress 的文件夹，然后在该文件夹中创建一个名为 config.js 的配置文件。在 config.js 文件中添加以下代码：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>module.exports = {
  head: [
    [&#39;script&#39;, {}, \`
      var _hmt = _hmt || [];
      (function() {
        var hm = document.createElement(&quot;script&quot;);
        hm.src = &quot;https://hm.baidu.com/hm.js?YOUR_BAIDU_SITE_ID&quot;;
        var s = document.getElementsByTagName(&quot;script&quot;)[0]; 
        s.parentNode.insertBefore(hm, s);
      })();
   \`]
  ]
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在代码中，将 <code>YOUR_BAIDU_SITE_ID</code> 替换为您在百度统计中创建站点时获得的站点 ID。</p><p>将配置文件添加到 Git 仓库并部署网站：完成上述步骤后，将创建的 .vuepress 文件夹和其中的 config.js 文件添加到您的 Git 仓库中，并将网站部署到您的服务器或托管平台上。如果您使用的是 GitHub Pages，您可以将 .vuepress 文件夹和其中的 config.js 文件添加到您的 GitHub 仓库中，并在仓库的设置页面中将 GitHub Pages 的源设置为“master branch /docs folder”。</p><p>验证是否成功添加了百度统计：最后，您可以访问您的网站并登录到百度统计管理面板中，查看是否有网站访问数据。如果一切正常，您应该能够在百度统计中看到您网站的访问数据和用户行为数据。</p><p>以上是在 VuePress 中集成百度统计的步骤和代码示例。请注意，由于百度统计的代码可能会随时更新，所以建议您在将代码添加到您的 VuePress 项目中之前，先阅读并遵循百度统计的官方文档。另外，您还可以使用 VuePress 插件来方便地集成百度统计，例如 vuepress-plugin-baidu-analytics 插件。此插件可以自动在您的 VuePress 网站中添加百度统计代码，而无需手动编辑配置文件。您可以在 VuePress 插件市场中搜索该插件，并按照其文档说明进行安装和配置。</p><h3 id="站长工具-百度资源搜索平台" tabindex="-1"><a class="header-anchor" href="#站长工具-百度资源搜索平台" aria-hidden="true">#</a> 站长工具：百度资源搜索平台</h3><blockquote><p><em><strong>网站言则会那个不通过的问题：</strong></em></p></blockquote><p>在平台添加网站时，需要进行文件或者HTML标签进行验证，之前一直验证都不通过，昨天（23年/5月26日）根据报错信息，终于验证通过了，我选择的验证方式是文件验证，因为在vuepress博客中构建的每一个html文件添加相应的标签，我还没有找到合适的方法，于是就通过文件验证的方法进行了相关的验证，</p><p>刚开始按照网站的提示，将验证文件放在网站的根目录下，然后按要求照做了，结果是一直未验证通过。点击确认验证文件可以正常访问，也访问不到相应的验证文件，然后就想着还是路径不对，然后求助了<code>ChatGpt</code>,把验证文件换了一个路径进行上传，然后问题就解决了！！！</p><blockquote><p><em><strong>API 提交和 Sitemap 提交应该选择哪一个？</strong></em></p></blockquote><p>API 提交和 Sitemap 提交都可以帮助搜索引擎更好地收录和展示您的网站数据，但是它们的作用和适用场景略有不同。</p><p>API 提交是指通过将网站数据以 API 接口的形式提供给搜索引擎，让搜索引擎可以更及时、准确地获取网站数据。API 提交通常适用于动态内容和实时数据的网站，比如新闻、社交媒体、股票行情等。API 提交可以让搜索引擎更快地获取网站数据，从而更及时地更新搜索结果，提高网站曝光度和流量。</p><p>Sitemap 提交是指将网站的 Sitemap 文件提交给搜索引擎，以便搜索引擎更好地了解网站的结构和内容。Sitemap 提交通常适用于静态内容和定期更新的网站，比如博客、电商网站、企业网站等。Sitemap 提交可以让搜索引擎更快地了解网站的结构和内容，从而更好地收录和展示网站的信息，提高网站的可见性和搜索排名。</p><p>综合来说，API 提交和 Sitemap 提交都可以提高网站的曝光度和流量，但是它们的适用场景略有不同。对于动态内容和实时数据的网站，API 提交更为适用；对于静态内容和定期更新的网站，Sitemap 提交更为适用。在实际应用中，可以根据网站的特点和需求，选择合适的提交方式来促进网站的发展和成长。</p><h3 id="域名备案需要服务器ip的问题" tabindex="-1"><a class="header-anchor" href="#域名备案需要服务器ip的问题" aria-hidden="true">#</a> 域名备案需要服务器IP的问题</h3><blockquote><p>必须要有服务器吗？</p></blockquote><p>根据中国互联网信息办公室的规定，如果您的个人博客使用的域名在中国大陆境内进行访问，需要进行备案才能正常访问。备案需要提供服务器的信息，包括服务器所在地、服务器的 IP 地址、备案主体信息等。</p><p>如果您的个人博客部署在 GitHub Pages 或其他类似的静态网站托管服务上，而没有自己的服务器，那么备案可能会有一定的困难。因为备案需要提供服务器的信息，如果没有自己的服务器，就无法提供这些信息。此时，您可以考虑购买虚拟主机或云服务器等产品，然后将个人博客迁移到这些服务器上，再进行备案。</p><p>在购买虚拟主机或云服务器时，您可以选择腾讯云或其他云服务提供商，根据自己的需求选择合适的产品类型和配置，然后将个人博客部署到服务器上。备案完成后，将域名解析到服务器的 IP地址，就可以正常访问个人博客了。</p><p>需要注意的是，备案需要提供真实的备案主体信息，包括个人或单位的营业执照、身份证等证件，如果您是个人用户，需要提供有效的身份证件。因此，在进行备案之前，建议先了解备案的相关规定和流程，准备好备案所需的材料和信息，以免出现不必要的麻烦。</p><p>另外，备案是一个比较复杂的过程，需要注意各个环节的细节。如果您对备案流程和规定不熟悉，建议咨询相关专业人士或官方机构的客服人员，以避免出现不必要的错误和问题。</p>`,29);function $(Z,Q){const a=l("ExternalLinkIcon");return o(),r("div",null,[d,e("h3",c,[u,s(),e("a",h,[s("评论插件：Waline"),n(a)])]),m,e("ul",null,[e("li",null,[s("首先登录"),e("a",v,[s("leancloud"),n(a)]),s("，注册数据库，记录"),g,s(","),b,s(" 和 "),k,s("以便后续使用；")])]),_,e("ul",null,[e("li",null,[s("登录"),e("a",f,[s("Vercel"),n(a)]),s(" 进行服务端部署，设置环境变量之后，重新部署，即可获得serveUrl。 "),e("ul",null,[e("li",null,[s("我获取到的服务端地址："),e("a",q,[s("https://cs-guider-6cmm99f2s-wl2o2o.vercel.app/"),n(a)])])])])]),e("blockquote",null,[x,P,e("ul",null,[e("li",null,[s("评论系统："),e("a",y,[s("example.your-domain.com"),n(a)])]),e("li",null,[s("评论管理："),e("a",V,[s("example.your-domain.com/ui"),n(a)])])])]),I,e("p",null,[s("详情请见 "),e("a",G,[s("Waline 配置"),n(a)])]),W,j,e("h3",w,[S,s(),e("a",H,[s("评论插件：giscus"),n(a)])]),A,D,e("ol",null,[e("li",null,[e("strong",null,[s("此仓库是"),e("a",N,[s("公开的"),n(a)])]),s("，否则访客将无法查看 discussion。")]),e("li",null,[e("strong",null,[e("a",T,[s("giscus"),n(a)]),s(" app 已安装")]),s("否则访客将无法评论和回应。")]),e("li",null,[L,s("功能已"),e("a",U,[s("在你的仓库中启用"),n(a)]),s("。")])]),z,e("blockquote",null,[e("p",null,[s("每次您 push 代码后，都会给远程 HTTP URL 发送一个 POST 请求 "),e("a",M,[s("更多说明 »"),n(a)])]),e("p",null,[s("WebHook 增加对钉钉的支持 "),e("a",B,[s("更多说明 »"),n(a)])]),e("p",null,[s("WebHook 增加对企业微信的支持 "),e("a",C,[s("更多说明 »"),n(a)])]),e("p",null,[s("WebHook 增加对飞书的支持 "),e("a",E,[s("更多说明 »"),n(a)])])]),R,e("ol",null,[e("li",null,[s("使用 "),e("a",F,[s("Markmapopen in new window"),n(a)]),s(" 生成思维导图 HTML 文件（安装markmap插件，可以以思维导图的图形预览markdown文件，然后可选是否导出为html文件）")]),O,Y]),J,K,X])}const se=i(p,[["render",$],["__file","hellovuepress.html.vue"]]);export{se as default};
